<?xml version="1.0" encoding="UTF-8"?>
 <beans:beans xmlns="http://www.springframework.org/schema/security"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 	 <http pattern="/**/style/*" security="none"/>
 	 <http pattern="/login" security="none"/>
     <http access-denied-page="/403"><!-- 当访问被拒绝时，会转到403 -->
         <form-login login-page="/login"
             authentication-failure-url="/login?error=true"
             default-target-url="/index" />
             
         <intercept-url pattern="/admin" access="ROLE_SUPERADMIN"/>
         <intercept-url pattern="/**" access="ROLE_GENERALADMIN"/>
        
         <logout logout-success-url="/login" />
         <http-basic />
         
         <session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
		</session-management>
         
         <!-- 增加一个filter位于FILTER_SECURITY_INTERCEPTOR之前,不能修改默认的filter -->
         <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />
         
     </http>
 
     <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,
     securityMetadataSource三个属性，我们的所有控制将在这三个类中实现，解释详见具体配置 -->
     <beans:bean id="securityFilter" class="com.monitor.app.web.security.interceptor.MyFilterSecurityInterceptor">
         <beans:property name="authenticationManager" ref="authenticationManager" />
         <beans:property name="securityMetadataSource"  ref="securityMetadataSource" />
         <beans:property name="accessDecisionManager"  ref="accessDecisionManager" />
     </beans:bean>
     
     <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
     <authentication-manager alias="authenticationManager">
         <authentication-provider user-service-ref="userDetailService">
             <!--   如果用户的密码采用加密的话，可以加“盐”
                 <password-encoder hash="md5" />
             -->
         </authentication-provider>
     </authentication-manager>
     
     <!-- 初始化用户信息 -->
     <beans:bean id="userDetailService" class="com.monitor.app.web.security.config.MyUserDetailService" />
 
  	 <!-- 资源定义，即定义某一资源可以被哪些角色访问 -->
     <beans:bean id="securityMetadataSource" class="com.monitor.app.web.security.config.MyInvocationSecurityMetadataSource" />
     
     <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
     <beans:bean id="accessDecisionManager" class="com.monitor.app.web.security.config.MyAccessDecisionManager"/>
     
 
 </beans:beans>
