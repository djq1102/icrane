<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 指定自己定义的validator -->
	
	<mvc:annotation-driven validator="validator"/>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
   		<beans:property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
   		<beans:property name="validationMessageSource" ref="messageSource"/>
	</beans:bean>  
	
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->  
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
	    <beans:property name="basenames">  
	        <beans:list>  
	            <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->  
	            <beans:value>classpath:messages</beans:value>  
	            <beans:value>classpath:org/hibernate/validator/ValidationMessages</beans:value>  
	        </beans:list>  
	    </beans:property>  
	    <beans:property name="useCodeAsDefaultMessage" value="false"/>  
	    <beans:property name="defaultEncoding" value="UTF-8"/>  
	    <beans:property name="cacheSeconds" value="60"/>  
	</beans:bean>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/style/**" location="/resources/style/" />
	<resources mapping="/image/**" location="/resources/image/" />
	<resources mapping="/media/**" location="/resources/media/" />
	<context:component-scan base-package="com.monitor.app" />




</beans:beans>
